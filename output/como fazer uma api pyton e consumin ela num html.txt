Criar uma API em Python e consumi-la em um arquivo HTML pode ser um processo interessante e did√°tico. Aqui est√° um guia b√°sico para voc√™ come√ßar:

### **1. Criando a API com Python**
Para isso, voc√™ pode usar o framework Flask, que √© leve e f√°cil de usar.

- Instale o Flask:
  ```bash
  pip install flask
  ```

- Exemplo de c√≥digo para sua API:
  ```python
  from flask import Flask, jsonify

  app = Flask(__name__)

  @app.route('/api/dados', methods=['GET'])
  def get_dados():
      dados = {"mensagem": "Ol√°, mundo!", "status": "sucesso"}
      return jsonify(dados)

  if __name__ == '__main__':
      app.run(debug=True)
  ```

  Esse c√≥digo cria uma API simples que retorna um JSON com uma mensagem.

### **2. Consumindo a API em um arquivo HTML**
Voc√™ pode usar JavaScript (com Fetch API) para consumir os dados da sua API.

- Exemplo de c√≥digo HTML:
  ```html
  <!DOCTYPE html>
  <html lang="pt-BR">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Consumir API</title>
  </head>
  <body>
      <h1>Dados da API:</h1>
      <div id="resultado"></div>
      <script>
          fetch('http://127.0.0.1:5000/api/dados')
              .then(response => response.json())
              .then(data => {
                  document.getElementById('resultado').textContent = 
                      `Mensagem: ${data.mensagem}, Status: ${data.status}`;
              })
              .catch(error => console.error('Erro ao consumir a API:', error));
      </script>
  </body>
  </html>
  ```

### **3. Como executar**
- Salve o c√≥digo da API Python, execute-o no terminal, e certifique-se de que o servidor Flask est√° rodando.
- Abra o arquivo HTML em um navegador. Ele far√° uma requisi√ß√£o √† API local e exibir√° os dados.

Se precisar de ajuda para personalizar sua API ou para entender melhor alguma parte do processo, estou aqui! üöÄ